"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[9403],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,g=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5057:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},i="Contribution Process",s={unversionedId:"contribute/contribution",id:"contribute/contribution",isDocsHomePage:!1,title:"Contribution Process",description:"The following is a set of guidelines for contributing to Dagger. These are mostly guidelines, not hard and first rules. Use your best judgment, and feel free to propose changes to this document over a pull request. Here are some important resources:",source:"@site/docs/contribute/contribution.md",sourceDirName:"contribute",slug:"/contribute/contribution",permalink:"/dagger/docs/contribute/contribution",editUrl:"https://github.com/raystack/dagger/edit/master/docs/docs/contribute/contribution.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Joining two Kafka topics using Inner join",permalink:"/dagger/docs/examples/kafka_inner_join"},next:{title:"Development Guide",permalink:"/dagger/docs/contribute/development"}},l=[{value:"How can I contribute?",id:"how-can-i-contribute",children:[]},{value:"Becoming a maintainer",id:"becoming-a-maintainer",children:[]},{value:"Guidelines",id:"guidelines",children:[]},{value:"Making a pull request",id:"making-a-pull-request",children:[{value:"Incorporating upstream changes from master",id:"incorporating-upstream-changes-from-master",children:[]}]}],u={toc:l},c="wrapper";function m(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contribution-process"},"Contribution Process"),(0,a.kt)("p",null,"The following is a set of guidelines for contributing to Dagger. These are mostly guidelines, not hard and first rules. Use your best judgment, and feel free to propose changes to this document over a pull request. Here are some important resources:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../concepts/overview"},"Concepts")," section will explain to you about Dagger architecture."),(0,a.kt)("li",{parentName:"ul"},"Our ",(0,a.kt)("a",{parentName:"li",href:"/dagger/docs/roadmap"},"roadmap")," is the 10000-foot view of where we're heading in near future."),(0,a.kt)("li",{parentName:"ul"},"Github ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/raystack/dagger/issues"},"issues")," track the ongoing and reported issues.")),(0,a.kt)("h2",{id:"how-can-i-contribute"},"How can I contribute?"),(0,a.kt)("p",null,"We use RFCs and GitHub issues to communicate ideas."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You can report a bug, suggest a feature enhancement or can just ask questions. Reach out on Github discussions for this purpose."),(0,a.kt)("li",{parentName:"ul"},"You are also welcome to add new sinks to Dagger, improve monitoring and logging and improve code quality."),(0,a.kt)("li",{parentName:"ul"},"You can help with documenting new features or improve existing documentation."),(0,a.kt)("li",{parentName:"ul"},"You can also review and accept other contributions if you are a maintainer.")),(0,a.kt)("p",null,"Please submit a PR to the main branch of the Dagger repository once you are ready to submit your contribution. Code submission to Dagger ","(","including a submission from project maintainers",")"," requires review and approval from maintainers or code owners. Once the build is passed, community members will help to review the pull request and merge changes."),(0,a.kt)("h2",{id:"becoming-a-maintainer"},"Becoming a maintainer"),(0,a.kt)("p",null,"We are always interested in adding new maintainers. What we look for is a series of contributions, good taste, and an ongoing interest in the project."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"maintainers will have write access to the Dagger repositories."),(0,a.kt)("li",{parentName:"ul"},"There is no strict protocol for becoming a maintainer or PMC member. Candidates for new maintainers are typically people that are active contributors and community members."),(0,a.kt)("li",{parentName:"ul"},"Candidates for new maintainers can also be suggested by current maintainers or PMC members."),(0,a.kt)("li",{parentName:"ul"},"If you would like to become a maintainer, you should start contributing to Dagger in any of the ways mentioned. You might also want to talk to other maintainers and ask for their advice and guidance.")),(0,a.kt)("h2",{id:"guidelines"},"Guidelines"),(0,a.kt)("p",null,"Some rules need to be followed to contribute."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Contributions can only be accepted if they contain appropriate testing ","(","Unit and Integration Tests",")",". The test coverage should not go below the original branch."),(0,a.kt)("li",{parentName:"ul"},"If you are introducing a completely new feature or making any major changes to an existing one, we recommend starting with an RFC and get consensus on the basic design first."),(0,a.kt)("li",{parentName:"ul"},"Make sure your local build is running with all the tests and check style passing."),(0,a.kt)("li",{parentName:"ul"},"If your change is related to user-facing protocols/configurations, you need to make the corresponding change in the documentation as well."),(0,a.kt)("li",{parentName:"ul"},"Docs live in the code repo under ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/raystack/dagger/tree/main/docs"},"docs")," so that changes to that can be done in the same PR as changes to the code.")),(0,a.kt)("h2",{id:"making-a-pull-request"},"Making a pull request"),(0,a.kt)("h3",{id:"incorporating-upstream-changes-from-master"},"Incorporating upstream changes from master"),(0,a.kt)("p",null,"Our preference is the use of git rebases instead of git merge. Please sign commits"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Include -s flag to sign off\n$ git commit -s -m "feat: my first commit"\n')),(0,a.kt)("h4",{id:"practices-to-follow"},"Practices to follow"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Follow the ",(0,a.kt)("a",{parentName:"li",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"conventional commit")," format for all commit messages."),(0,a.kt)("li",{parentName:"ul"},"Fill in the description based on the default template configured when you first open the PR."),(0,a.kt)("li",{parentName:"ul"},"Include desired labels when opening the PR."),(0,a.kt)("li",{parentName:"ul"},"Add ",(0,a.kt)("inlineCode",{parentName:"li"},"WIP:")," to PR name if more work needs to be done before review."),(0,a.kt)("li",{parentName:"ul"},"Avoid force-pushing as it makes reviewing difficult.")),(0,a.kt)("p",null,"We follow ",(0,a.kt)("a",{parentName:"p",href:"https://semver.org/"},"semantic versioning")," for any code change and release. The version is defined in\nthe ",(0,a.kt)("a",{target:"_blank",href:n(2359).Z},"version.txt")," file and is common across all the submodules."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Bump up the patch version for every backward compatible changes like addition of new UDFs/transformers/bug fixes etc."),(0,a.kt)("li",{parentName:"ul"},"In case of any contract changes bump of minor version."),(0,a.kt)("li",{parentName:"ul"},"For major feature releases like upgrading the Flink version, update the major version.")))}m.isMDXComponent=!0},2359:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/version-54c657b9b236cf344577df2d9929b15a.txt"}}]);